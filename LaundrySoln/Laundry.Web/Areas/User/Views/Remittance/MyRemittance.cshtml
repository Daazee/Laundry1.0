@model IEnumerable<Laundry.Model.Remittance>

@{
    ViewBag.Title = "MyRemittance";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<h2>MyRemittance</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container text-capitalize" style="font-size:14px;">
            <div class="bg-danger">
                @if (ViewBag.Message != null && ViewBag.Message != "")
                {
                    @ViewBag.Message;
                }
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Start Remit Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="txtStartDate" id="txtStartDate" class="form-control" />
                @Html.ValidationMessage("", "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("End Remit Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="txtEndDate" id="txtEndDate" class="form-control" />
                @Html.ValidationMessage("", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Print" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    <div class="container">
        @*@Html.ActionLink("Excel", "ExportSalesReport", new { ReportType = "Excel" })
        @Html.ActionLink("PDF", "ExportSalesReport", new { ReportType = "pdf" })*@
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover">
                <thead style="color:blueviolet;">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Remittance_Date)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Remittance_Amount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Remittance_Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Special_Note)
                        </th>
                        @*<th>
                    @Html.DisplayNameFor(model => model.Remittance_UserId)
                </th>*@
                    </tr>
                </thead>
@if (Model != null)
{
    foreach (var item in Model)
    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remittance_Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remittance_Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remittance_Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Special_Note)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Remittance_UserId)
                        </td>*@
                    </tr>
    }
}
            </table>
        </div>
    </div>