@model IEnumerable<Laundry.Model.Transaction>
@{
    ViewBag.Title = "UpdateClothStatus";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<h2>Update Cloth Status</h2>
@using (Html.BeginForm("UpdateClothStatus", "Transaction", FormMethod.Get))
{
    <div class="form-horizontal">

        <div class="container" style="margin-bottom:15px;">
            @if (Session["UpdateMessage"] != null && Session["UpdateMessage"].ToString() != "")
            {
                <div class="bg-success" id="message">
                    @Session["UpdateMessage"];
                </div>
            }

        </div>

        <div class="container">
            @*<div class="table-responsive">
                <table class="table table-striped table-bordered table-hover">
                    <tbody>
                        <tr>
                            <td>
                                Search By
                            </td>
                            <td>
                                Value
                            </td>
                            <td>
                                Start Date
                            </td>
                            <td>
                                End Date
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <select name="type" id="type" class="form-control">
                                    <option value="Select" selected>Select</option>
                                    <option value="TransNo">Transaction Number</option>
                                    <option value="Name">Customer Name</option>
                                    <option value="Date">Entry Date</option>
                                    <option value="Type">Cloth Type</option>
                                </select>
                            </th>
                            <th>
                                <input type="text" name="value" id="value" class="form-control" />
                            </th>
                            <th>
                                <input type="text" name="startdate" id="startdate" class="form-control" />
                            </th>
                            <th>
                                <input type="text" name="enddate" id="enddate" class="form-control" />
                            </th>
                        </tr>
                        <tr><td colspan="4"><input type="submit" value="Search" class="btn btn-default" /></td></tr>
                    </tbody>

                </table>
                </div>*@
            <div class="form-group">
                @Html.Label("Transaction Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <input type="text" name="MyTransNo" id="MyTransNo" class="form-control" />
                </div>
                <div class="col-md-7">
                    <input type="submit" value="Search" class="btn btn-default" id="Save" />
                </div>
            </div>
        </div>
    </div>
}

<div class="container">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead style="color:blueviolet;">
                <tr>
                    <th>
                        @*Checked Boxes*@
                    </th>
                    @*
                        <th>

                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.KeyDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TransactionNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CustomerName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CustomerTag)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ClothCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TotalCostAmount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AmountPaid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ClothStatus)
                    </th>
                    <th></th>
                    <th style="display:none"></th>
                </tr>
            </thead>
            @if (Model != null)
            {
                double ExpressAmount = 0.00;
                foreach (var item in Model)
                {
                    ExpressAmount = item.ExPressAmount;
                    <tr>
                        <td>
                            <input type="checkbox" class="ckb" name="updckb" id="@item.TransactionId" value="@item.TransactionId" />
                        </td>
                        @* Updating Status one by one*@
                        @*<td>
                                @Html.ActionLink("Ready", "UpdateStatusReady", new { Transid = item.TransactionId, status = "R" }, new { onclick = "return confirmStatusUpdate()" })|
                                @Html.ActionLink("Collection", "UpdateStatusReady", new { Transid = item.TransactionId, status = "C" }, new { onclick = "return confirmCollectionStatus()" })
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.KeyDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerTag)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ClothCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalCostAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AmountPaid)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.ClothStatus)
                        </td>*@
                        @if (item.ClothStatus == "N")
                        {
                            <td>
                                Not Ready
                            </td>
                        }
                        @if (item.ClothStatus == "R")
                        {
                            <td>
                                Ready
                            </td>
                        }
                        @if (item.ClothStatus == "C")
                        {
                            <td>
                                Collected
                            </td>
                        }
                        <td>
                            @if (item.ClothStatus == "R" && item.TotalCostAmount > item.AmountPaid)
                            {
                                @Html.ActionLink("Proceed to Payment", "TransUpdate", new { Area = "User", Controller = "Transaction", transNo = item.TransactionNo }, new { @class = "btn btn-default" })
                            }
                        </td>
                        <td style="display:none">
                            <input type="text" id="phoneno" name="phoneno" value="@item.CustomerPhone" />
                            <input type="text" id="clothstatus" name="clothstatus" value="@item.ClothStatus" />
                        </td>
                    </tr>
                }
                if (ExpressAmount != 0)
                {
                    <tr>
                        <td colspan="8" style="text-align:right;"><b>Express Amount</b></td>
                        <td>@ExpressAmount</td>
                        <td colspan="5"></td>
                    </tr>
                }
            }

        </table>
    </div>
</div>
<div class="container">
    @*<a href='@Url.Action("")' class="btn btn-default" id="ready" onclick="return confirmStatusUpdate()">Ready</a> |
    <a href='@Url.Action("")' class="btn btn-default" id="collection" onclick="return confirmCollectionStatus()">Collection</a>*@
    <a href='@Url.Action("")' class="btn btn-default" id="ready">Ready</a> |
    <a href='@Url.Action("")' class="btn btn-default" id="collection">Collection</a>
  
    @*<a href='@Url.Action("TransUpdate" ,new { Area="User", Controller="Transaction" })' class="btn btn-default" id="collection" style="margin-left:100px;">Proceed to Payment</a>*@
</div>
@section Scripts{
    <script>
        //function confirmStatusUpdate() {
        //    var r = confirm("Are you sure you want to update cloth status to READY");
        //    if (r) {
        //        return true;
        //    }
        //    else {
        //        return false;
        //    }

        //}

        //function confirmCollectionStatus() {
        //    var r = confirm("Are you sure you want to update cloth status to COLLECTION");
        //    if (r) {
        //        return true;
        //    }
        //    else {
        //        return false;
        //    }

        //}

        $(document).ready(function () {
            $('#ready').click(function (e) {
                e.preventDefault();
                var checkedIds = $(".ckb").filter(":checked").map(function () { return this.id; });
                //alert("" + checkedIds[0] + "," + checkedIds[1]);
                alert("ready")
                var r = confirm("Are you sure you want to update cloth status to READY");
                if (r) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("ReadyOrCollection")",
                        traditional: true,
                        data: { Ids: checkedIds.toArray(), Status: "R" },
                        success: successFunc,
                        error: errorFunc
                    });

                    function successFunc(data, status) {
                        alert("success")
                        console.log("Sending message")
                        sendMessage();
                        
                        location.reload();
                        
                    }

                    function errorFunc() {
                        alert("Error occured");
                    }
                }
                else {
                }

            })
           
            $('#collection').click(function (e) {
                e.preventDefault();
                var checkedIds = $(".ckb").filter(":checked").map(function () { return this.id; });
                var r = confirm("Are you sure you want to update cloth status to COLLECTION");
                if (r) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("ReadyOrCollection")",
                        traditional: true,
                        data: { Ids: checkedIds.toArray(), Status: "C" },
                        success: successFunc,
                        error: errorFunc
                    });

                    function successFunc(data, status) {
                        location.reload();
                    }

                    function errorFunc() {
                        alert("Error occured");
                    }
                }
            })

            function sendMessage() {
                var phoneNo = $('#phoneno').val();
                var clothStatus = $('#clothstatus').val();
                phoneNo = "234" + phoneNo.substring(1)
                console.log(phoneNo);
                console.log("Cloth Status is: " + clothStatus);
                if (clothStatus == "N") {
                    $.ajax({
                        type: "GET",
                        url: "http://api.smartsmssolutions.com/smsapi.php?username=DeeProg&password=Tremendous@1&sender=Laundry&recipient=" + phoneNo + "&message=Your Cloth is ready for collection. Thanks for your patronage.",
                        success: successFunc,
                        error: errorFunc
                    });

                    function successFunc(response) {
                        console.log("Message sending response" + response);
                    }

                    function errorFunc(error) {
                        //alert("Error occured");//To avoid alerting if no internet connection.
                        console.log(error);
                    }
                }

            }

        })
    </script>

}

